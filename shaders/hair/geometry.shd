#version 450
#define SEGMENTS 5
#define LENGTH 0.3
#define GRAVITY 0.2

layout( triangles ) in;
layout( line_strip, max_vertices=SEGMENTS ) out;

uniform vec2 pan;

uniform mat4 model_view_matrix;
uniform mat4 projection_matrix;

in vec3 vColor[3];
in vec3 vNormal[3];

out vec3 color;

void main() {
  vec4 middle = (gl_in[0].gl_Position + gl_in[1].gl_Position + gl_in[2].gl_Position) / 3.;
  vec3 normal = (vNormal[0] + vNormal[1] + vNormal[2]) / 3.;
  vec4 increment = LENGTH * vec4(normal, 0.) / SEGMENTS;

  color = (vColor[0] + vColor[1] + vColor[2]) / 3;

  vec4 gravity = vec4(0, -GRAVITY * LENGTH / SEGMENTS, 0, 0);

  for (int i = 0; i < SEGMENTS; i++) {
    gl_Position = projection_matrix * model_view_matrix * (middle + increment * i + gravity * i * i);
    EmitVertex();
  }

  EndPrimitive();
}
